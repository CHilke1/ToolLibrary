@model ToolLibrary.Models.DetailViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.11/jquery-ui.min.js"></script>
<div>
    <h4>Tool</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Manufacturer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Manufacturer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AdditionalDescription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AdditionalDescription)
        </dd>

        <dt>@if (Model != null && !String.IsNullOrEmpty(Model.ImageUrl))
        {
            @Html.DisplayNameFor(model => model.ImageUrl)
        }
        </dt>

        <dd>
            <img src="@Url.Content(Model.ImageUrl)" alt="Image" width="200" height="200" class="img-thumbnail" />
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Due)
        </dt>

        <dd>@if (Model.Due == DateTime.MinValue) { <b>Item is available for checkout.</b> } else { @Html.DisplayFor(model => model.Due) }    
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    <a href="@Url.Action("Index", "Tools")?categoryId=@Model.CategoryId.ToString()">Back to List</a>
</p>
<p><a id="dropdown" class="btn btn-default btn-lg btn-block" href="#" role="button">Check out</a></p>


<div class="dropdownwrap">
    <h2>Checkout Item</h2>
    @using (Ajax.BeginForm("Details", "Tools", new AjaxOptions { UpdateTargetId = "divInterestDeatils" }))
    {
        <ol>
            <li>
                @Html.Label("Begin Checkout")
                @Html.TextBox("txtOut", null, new { @Value = DateTime.Now.ToString("MM/dd/yyyy"), id = "from" })
            </li>
            <li>
                @Html.Label("Return Date")
                @Html.TextBox("txtReturn", null, new { @Value = DateTime.Now.ToString("MM/dd/yyyy"), id = "to" })
            </li>
            @Html.Hidden("id", @Model.Id)
        </ol>
        <button id="dropdown" button class="btn btn-default" type="submit">Check Out</button>
    }

   @{
       if (Model.TriggerOnLoad == true)
       {
            <text>
                <script type="text/javascript">
                    var categoryId=@Model.CategoryId;
                    alert('@Model.TriggerOnLoadMessage');
                    window.location.href = '/Tools?CategoryId=' + categoryId;
                </script>
            </text>
       }

    }
</div>
@section Scripts{
    <script>
        var disableddates = [];
        @if (Model.ReservedDates.Count > 0)
        {
            foreach (var d in Model.ReservedDates)
            {
                @:disableddates.push("@d.ToString("MM/dd/yyyy")");
            };
        }
        var disableddates2 = ["02/17/2016", "02/18/2016"];

        function DisableSpecificDates(date) {
            var string = jQuery.datepicker.formatDate('mm/dd/yy', date);
            return [disableddates.indexOf(string) == -1];
        }

        var dateToday = new Date();

        var dates = $("#from, #to").datepicker({
            defaultDate: "+1w",
            changeMonth: true,
            numberOfMonths: 1,
            minDate: dateToday,
            beforeShowDay: DisableSpecificDates,
            onSelect: function (selectedDate) {
                var option = this.id == "from" ? "minDate" : "maxDate",
                    instance = $(this).data("datepicker"),
                    date = $.datepicker.parseDate(instance.settings.dateFormat || $.datepicker._defaults.dateFormat, selectedDate, instance.settings);
                dates.not(this).datepicker("option", option, date);
            }
        });
        $(document).ready(function () {
            $("#dropdown").click(function () {
                $(".dropdownwrap").slideToggle();
            });
        });
    </script>
}






